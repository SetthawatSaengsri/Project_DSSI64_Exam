# Generated by Django 5.2.1 on 2025-07-24 23:20

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='รหัสอาคาร')),
                ('name', models.CharField(max_length=100, verbose_name='ชื่อเอาคาร')),
                ('description', models.TextField(blank=True, verbose_name='รายละเอียด')),
            ],
            options={
                'verbose_name': 'อาคาร',
                'verbose_name_plural': 'อาคาร',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_student', models.BooleanField(default=False, verbose_name='นักเรียน')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='ครู')),
                ('is_staff', models.BooleanField(default=False, verbose_name='เจ้าหน้าที่')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExamRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='ชื่อห้อง')),
                ('capacity', models.PositiveIntegerField(verbose_name='ความจุ')),
                ('has_projector', models.BooleanField(default=False, verbose_name='มีโปรเจคเตอร์')),
                ('has_aircon', models.BooleanField(default=False, verbose_name='มีแอร์')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='exam_app.building', verbose_name='อาคาร')),
            ],
            options={
                'verbose_name': 'ห้องสอบ',
                'verbose_name_plural': 'ห้องสอบ',
                'ordering': ['building__code', 'name'],
                'unique_together': {('building', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(blank=True, default='', max_length=20, unique=True, verbose_name='รหัสเจ้าหน้าที่')),
                ('position', models.CharField(blank=True, default='', max_length=50, verbose_name='ตำแหน่ง')),
                ('id_card', models.FileField(blank=True, null=True, upload_to='staff_documents/', verbose_name='เอกสารประกอบ')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'โปรไฟล์เจ้าหน้าที่',
                'verbose_name_plural': 'โปรไฟล์เจ้าหน้าที่',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True, verbose_name='รหัสนักเรียน')),
                ('student_number', models.CharField(blank=True, default='', max_length=10, verbose_name='เลขที่')),
                ('student_class', models.CharField(max_length=20, verbose_name='ระดับชั้น')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'โปรไฟล์นักเรียน',
                'verbose_name_plural': 'โปรไฟล์นักเรียน',
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_id', models.CharField(max_length=20, unique=True, verbose_name='รหัสครู')),
                ('subject_expertise', models.CharField(blank=True, default='', max_length=100, verbose_name='วิชาที่เชี่ยวชาญ')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'โปรไฟล์ครู',
                'verbose_name_plural': 'โปรไฟล์ครู',
            },
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=100, verbose_name='ชื่อวิชา')),
                ('subject_code', models.CharField(max_length=20, verbose_name='รหัสวิชา')),
                ('academic_year', models.CharField(max_length=9, verbose_name='ปีการศึกษา')),
                ('term', models.CharField(choices=[('1', 'เทอม 1'), ('2', 'เทอม 2'), ('3', 'เทอม 3')], default='1', max_length=1, verbose_name='ภาคเรียน')),
                ('exam_date', models.DateField(verbose_name='วันสอบ')),
                ('start_time', models.TimeField(verbose_name='เวลาเริ่มสอบ')),
                ('end_time', models.TimeField(verbose_name='เวลาสิ้นสุดสอบ')),
                ('invigilator_checkin', models.BooleanField(default=False, verbose_name='ครูหลักเช็คชื่อแล้ว')),
                ('invigilator_checkin_time', models.DateTimeField(blank=True, null=True, verbose_name='เวลาเช็คชื่อครูหลัก')),
                ('secondary_invigilator_checkin', models.BooleanField(default=False, verbose_name='ครูสำรองเช็คชื่อแล้ว')),
                ('secondary_invigilator_checkin_time', models.DateTimeField(blank=True, null=True, verbose_name='เวลาเช็คชื่อครูสำรอง')),
                ('instructions', models.TextField(blank=True, verbose_name='คำแนะนำพิเศษ')),
                ('is_active', models.BooleanField(default=True, verbose_name='เปิดใช้งาน')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exam_app.examroom', verbose_name='ห้องสอบ')),
                ('students', models.ManyToManyField(blank=True, related_name='exam_subjects', to='exam_app.studentprofile', verbose_name='นักเรียน')),
                ('invigilator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_exams', to='exam_app.teacherprofile', verbose_name='ครูคุมสอบหลัก')),
                ('secondary_invigilator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_exams', to='exam_app.teacherprofile', verbose_name='ครูคุมสอบสำรอง')),
            ],
            options={
                'verbose_name': 'รายวิชาสอบ',
                'verbose_name_plural': 'รายวิชาสอบ',
                'ordering': ['exam_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkin_time', models.DateTimeField(blank=True, null=True, verbose_name='เวลาเช็คชื่อ')),
                ('status', models.CharField(choices=[('on_time', 'มาตรงเวลา'), ('late', 'มาสาย'), ('absent', 'ขาดสอบ')], default='absent', max_length=10, verbose_name='สถานะ')),
                ('note', models.TextField(blank=True, verbose_name='หมายเหตุ')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_app.examsubject', verbose_name='รายวิชา')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_app.studentprofile', verbose_name='นักเรียน')),
            ],
            options={
                'verbose_name': 'การเข้าสอบ',
                'verbose_name_plural': 'การเข้าสอบ',
                'ordering': ['-checkin_time'],
                'unique_together': {('student', 'subject')},
            },
        ),
        migrations.AddConstraint(
            model_name='examsubject',
            constraint=models.UniqueConstraint(fields=('subject_code', 'academic_year', 'term'), name='unique_subject_per_year_term'),
        ),
    ]
